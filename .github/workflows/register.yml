# You have to set PAT and add secrete ACCESS_OKREGISTRY in the repo {{{PKG}}}
# see also the default template: https://github.com/JuliaCI/PkgTemplates.jl/blob/master/templates/github/workflows/register.yml
# Also see [Running GitHub Actions Sequentially](https://stevenmortimer.com/running-github-actions-sequentially/) to separate updateokreg out from CI.yml, and trigger TagBot sequentially.
# CHECKPOINT: Currently substitution (e.g., {{{PKG}}}) failed.

name: Register Package to OkRegistry
on:
  push:
    paths:
      - 'Project.toml'
  issue_comment:
    types:
      - created
  workflow_dispatch:

env:
  # It seems to be redundant to define them first.
  CHANGELOG_MESSAGE: 'CHANGELOG_MESSAGE not available'
  JULIA_VERSION: ' '

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
# `contents: write` is required to allow `peter-evans/repository-dispatch`. You may alternatively on your github go to [settings-actions](https://github.com/okatsn/{{{PKG}}}.jl/settings/actions) to set the default permissions granted to the `GITHUB_TOKEN` to Read and write.
jobs:
  UpdateOkReg:
    # if: github.event_name == 'workflow_dispatch' || github.actor == 'JuliaTagBot'
    runs-on: ubuntu-20.04
    steps:
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.6.7
      - uses: actions/checkout@v3 # see https://github.com/actions/checkout
        with:
          path: TEMP
          token: ${{ secrets.ACCESS_SWCD }}
      - uses: actions/checkout@v3 # see https://github.com/actions/checkout
        with:
          repository: okatsn/OkRegistry
          path: OkRegistry
          token: ${{ secrets.ACCESS_OKREGISTRY }}
    # Update OkRegistry first.
    # 1. Current path is critical. Please refer to "add_local_pkg_to_registry.jl" in OkRegistry.
    # 2. `git config` is required, and has to be done in repo OkRegistry (cd OkRegistry must precede)
    # 3. Personal registry is add per julia install; that is, OkRegistry should be added before `Pkg.instantiate()`
      - run: |
          cd OkRegistry
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          julia --project=@. -e '
            using Pkg;
            Pkg.instantiate();
            Pkg.Registry.add(RegistrySpec(url = "https://github.com/okatsn/OkRegistry.git"));
            include("add_local_pkg_to_registry.jl");
            '
          echo "text=$(julia --project=@. -e '
            using Pkg;
            Pkg.add([Pkg.PackageSpec(;name="OkExpressions", version="0.1.5"), Pkg.PackageSpec(;name="OkMD", version="0.2.2")]);
            using OkMD, OkExpressions;
            cglog = try;
              OkMD.plain_string(OkMD.get_changelog("../TEMP/Project.toml", "../TEMP/changelog.md", 2; with_header=false));
            catch e;
              "changelog.md not available";
            end;
            print_raw(cglog);
          ')"  >> $GITHUB_OUTPUT
          echo "version=$(julia --project=@. -e '
            using Pkg;
            Pkg.add("TOML");
            using TOML;
            ver = try;
              d = TOML.parsefile("../TEMP/Project.toml");
              d["version"];
            catch e;
              "Version number not available";
            end;
            print(ver);
          ')" >> $GITHUB_OUTPUT
        id: regist
    # KEYNOTE:
    # - If you echo variable of the same name to GITHUB_OUTPUT, the former will be overwrite by the latter. To preserve all, the variable name (e.g., `text` in echo "text=$line") must be different. See https://stackoverflow.com/questions/74137120/how-to-fix-or-avoid-error-unable-to-process-file-command-output-successfully
    # - For GITHUB_OUTPUT, see: https://stackoverflow.com/questions/59191913/how-do-i-get-the-output-of-a-specific-step-in-github-actions and https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    # - For multi-line output, see https://trstringer.com/github-actions-multiline-strings/
    # - Declare dynamic variables (not used in this script) https://dev.to/a1ex/tricks-of-declaring-dynamic-variables-in-bash-15b9
    # - How to override an environment variable in Github Actions? https://stackoverflow.com/questions/66687561/how-to-override-an-environment-variable-in-github-actions